name: E2E Test Runner

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      test-project:
        required: true
        type: string
      environment:
        required: true
        type: string
      url:
        required: true
        type: string
      ref:
        required: true
        type: string
      deployment-target:
        required: true
        type: string

jobs:
  run-e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        browser: [chromium, 'Mobile Safari']
      fail-fast: false

    permissions:
      contents: read
      statuses: write

    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    env:
      CI: true
      URL: ${{ inputs.url }}
      ENVIRONMENT: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          persist-credentials: false

      - name: Setup pnpm
        uses: ./.github/actions/pnpm-setup

      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml', '**/playwright.config.ts') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps

      - name: Install system dependencies for WebKit
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps webkit

      - name: Run e2e tests
        run: pnpm exec playwright test --project="${{ matrix.browser }}"
        env:
          URL: ${{ env.URL }}

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-results-${{ matrix.browser }}-${{ github.run_id }}-${{ github.job }}
          path: ${{ inputs.working-directory }}/test-results/
          retention-days: 30

      - name: Post E2E status manually (with gh)
        if: always()
        run: |
          STATE="${{ job.status }}"
          CONTEXT="E2E Tests / e2e-tests (${{ matrix.browser }})"
          gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
            --method POST \
            --field state="${STATE}" \
            --field context="${CONTEXT}" \
            --field description="E2E test result for ${{ matrix.browser }}: (${STATE})" \
            --field target_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack Notification on Failure
        if: ${{ contains(env.ENVIRONMENT, inputs.deployment-target) && failure() }}
          uses: tokorom/action-slack-incoming-webhook@d57bf1eb618f3dae9509afefa70d5774ad3d42bf # v1.3.0
          env:
            INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_CLI_CI_WEBHOOK_URL }}
          with:
            text: 'E2E Test Failure'
            attachments: |
              [
                {
                  "color": "bad",
                  "fields": [
                    {
                      "title": "Browser",
                      "value": "${{ matrix.browser }}"
                    },
                    {
                      "title": "Result",
                      "value": "failure"
                    },
                    {
                      "title": "Job URL",
                      "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                    }
                  ]
                }
              ]
