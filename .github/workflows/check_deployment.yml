name: Check Deployment and Trigger E2E

on:
  deployment_status:

jobs:
  check_and_trigger:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      environment_val: ${{ steps.snapshot.outputs.env_val }}
      target_url: ${{ steps.snapshot.outputs.target_url }}
      sha: ${{ steps.snapshot.outputs.sha }}

    steps:
      - name: Snapshot deployment context
        id: snapshot
        run: |
          echo "env_val=${{ github.event.deployment.environment }}" >> $GITHUB_OUTPUT
          echo "target_url=${{ github.event.deployment_status.target_url }}" >> $GITHUB_OUTPUT
          echo "sha=${{ github.event.deployment.sha }}" >> $GITHUB_OUTPUT

      - name: Check deployment conditions
        id: check
        shell: ruby {0}
        run: |
          event_name      = "${{ github.event_name }}"
          event_state     = "${{ github.event.deployment_status.state }}"
          environment_val = "${{ steps.snapshot.outputs.env_val }}"
          target_url      = "${{ steps.snapshot.outputs.target_url }}"

          result =
            if event_name == "deployment_status" && event_state == "success"
              if (environment_val.include?("Preview")) && target_url.include?("liam-app")
                "should_run=true"
              elsif (environment_val.include?("Preview")) && target_url.include?("liam-erd-sample")
                "should_run=true"
              elsif environment_val.include?("Production") && target_url.include?("liam-app-git-main")
                "should_run=true"
              else
                "should_run=false"
              end
            else
              "should_run=false"
            end

          output_file = ENV.fetch("GITHUB_OUTPUT")
          File.open(output_file, "a") do |file|
            file.puts result
          end

  e2e-tests:
    needs: check_and_trigger
    if: needs.check_and_trigger.outputs.should_run == 'true'
    uses: ./.github/workflows/e2e_tests.yml
    with:
      environment_val: ${{ needs.check_and_trigger.outputs.environment_val }}
      target_url: ${{ needs.check_and_trigger.outputs.target_url }}
      sha: ${{ needs.check_and_trigger.outputs.sha }}
