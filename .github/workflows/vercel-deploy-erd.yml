# This workflow specifically deploys the `apps/erd-sample` and `apps/app` app.
# For deployments of other `apps/*` apps, see `.github/workflows/vercel-deploy.yml`.
name: Vercel Deployment erd-sample

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup-deployment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      environment: ${{ steps.environment.outputs.environment }}
      has-changes: ${{ steps.changes.outputs.src }}
    steps:
      - uses: actions/checkout@v4
      - uses: tj-actions/branch-names@6871f53176ad61624f978536bbf089c574dc19a2 # v8.0.1
        id: branch-name
      - name: Detect Environment Changes
        id: environment
        run: |
          echo "environment=${{ steps.branch-name.outputs.current_branch == 'main' && 'production' || 'preview' }}" >> $GITHUB_OUTPUT
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            src:
              - './.github/workflows/vercel-deploy-erd.yml'
              - './.github/workflows/_run_e2e_test.yml'
              - './frontend/apps/app/**'
              - './frontend/packages/cli/**'
              - './frontend/packages/db-structure/**'
              - './frontend/packages/e2e/**'
              - './frontend/packages/erd-core/**'
              - './frontend/packages/ui/**'
              - './pnpm-lock.yaml'

  deploy:
    name: Deploy
    needs: [setup-deployment]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: ${{ needs.setup-deployment.outputs.has-changes == 'true' }}
    strategy:
      matrix:
        apps:
          - name: app
            vercel-project-id-key: VERCEL_PROJECT_ID_ERD_WEB
    environment:
      name: "${{ needs.setup-deployment.outputs.environment }} - ${{ matrix.apps.name }}"
      url: ${{ steps.deployment.outputs.deployment-url }}
    permissions:
      contents: read
      deployments: write
    outputs:
      app-name: ${{ matrix.apps.name }}
      url: ${{ steps.deployment.outputs.deployment-url }}
    env:
      VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ vars[matrix.apps.vercel-project-id-key] }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/pnpm-setup
      - name: Pull Vercel Enviroment Infomation
        run: pnpm exec vercel pull --yes --environment=${{ needs.setup-deployment.outputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Enviroment Variables
        run: pnpm vercel:env-pull --yes --environment=${{ needs.setup-deployment.outputs.environment }} --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: pnpm exec vercel build ${{ needs.setup-deployment.outputs.environment == 'production' && '--prod' || '' }}
      - name: Deploy Project Artifacts to Vercel
        run: |
          pnpm exec vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} ${{ needs.setup-deployment.outputs.environment == 'production' && '--prod' || '' }} > deployment-url.txt
          echo "deployment-url=$(cat deployment-url.txt)" >> $GITHUB_OUTPUT
        id: deployment
  run-e2e:
    needs: deploy
    if: needs.deploy.result == 'success'
    uses: ./.github/workflows/_run_e2e_test.yml
    with:
      url: ${{ needs.deploy.outputs.url }}
      environment: ${{ needs.setup-deployment.outputs.environment }}
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-e2e
      cancel-in-progress: true
