# .github/workflows/claude-pr-creator.yml
name: Claude PR Creator
on:
  issues:
    types: [labeled]
  push:  # for testing - REMOVE BEFORE MERGE
    branches:
      - 'feat/test-automated-workflows'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.issue.number || github.sha }}
  cancel-in-progress: true

jobs:
  claude-pr-creator:
    if: contains(github.event.label.name, 'claude-create-pr') || github.event_name == 'push'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
      issues: write
      id-token: write  # Required for OIDC token
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Checkout using GitHub App Token
          token: ${{ secrets.GITHUB_TOKEN }}
          persist-credentials: false

      # Fetch actual issue details for push events
      - name: Get Issue Details
        if: github.event_name == 'push'
        id: issue
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: 2343
            });
            core.setOutput('number', issue.data.number);
            core.setOutput('title', issue.data.title);
            core.setOutput('body', issue.data.body);

      - name: Generate GitHub App Token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: app-token
        with:
          app-id: ${{ secrets.LIAM_CODE_ASSISTANT_APP_ID }}
          private-key: ${{ secrets.LIAM_CODE_ASSISTANT_PRIVATE_KEY }}
          permission-contents: write
          permission-pull-requests: write
          permission-issues: write
          repositories: liam

      - name: Run Claude Code Action
        uses: anthropics/claude-code-action@91c510a769db0f9b79df0efbdded0c29c033f846 # beta
        id: claude-code
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number || steps.issue.outputs.number }}
          ISSUE_TITLE: ${{ github.event.issue.title || steps.issue.outputs.title }}
          ISSUE_BODY: ${{ github.event.issue.body || steps.issue.outputs.body }}
        with:
          github_token: ${{ steps.app-token.outputs.token }}
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          direct_prompt: |
            Please implement based on Issue #$ISSUE_NUMBER:

            Title: $ISSUE_TITLE

            Content:
            $ISSUE_BODY

            Please implement with appropriate branch name and commit message.
            Output the branch name when implementation is complete.

      - name: Create Pull Request
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          ISSUE_NUMBER: ${{ github.event.issue.number || steps.issue.outputs.number }}
          ISSUE_TITLE: ${{ github.event.issue.title || steps.issue.outputs.title }}
          ISSUE_BODY: ${{ github.event.issue.body || steps.issue.outputs.body }}
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            // Get the branch created by Claude Code Action
            const branches = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            // Search for the latest branch (created by Claude Code Action)
            // Note: branches.data doesn't include commit dates, so we'll use the first non-main branch
            const latestBranch = branches.data
              .filter(branch => branch.name !== 'main' && branch.name !== 'master')[0];

            if (latestBranch) {
              console.log(`Creating PR for branch: ${latestBranch.name}`);

              const pr = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Fix: ${process.env.ISSUE_TITLE}`,
                head: latestBranch.name,
                base: 'main',
                draft: true,
                body: `
                Closes #${process.env.ISSUE_NUMBER}

                ## Summary
                ${process.env.ISSUE_TITLE}

                ## Implementation Details
                ${process.env.ISSUE_BODY}

                ## Auto-generated
                This PR was automatically generated by Claude Code Action.
                `
              });

              console.log(`Pull Request created: ${pr.data.html_url}`);

              // Add comment to the issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `ðŸ¤– Pull Request has been automatically created: ${pr.data.html_url}`
              });
            } else {
              console.log('No new branch found to create PR');
            }
