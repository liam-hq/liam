name: frontend-ci

on:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup-job:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      contents: read
      pull-requests: read
    outputs:
      has-changes: ${{ steps.changes.outputs.has-changes }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            has-changes:
              - '.github/workflows/frontend-ci.yml'
              - '.github/actions/pnpm-setup/**'
              - './frontend/**'
              - '.syncpackrc'
              - 'biome.jsonc'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - 'turbo.json'

  frontend-lint:
    needs: [setup-job]
    if: ${{ needs.setup-job.outputs.has-changes == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/pnpm-setup
      - name: Setup Turbo Cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - run: pnpm lint

  frontend-test-unit:
    needs: [setup-job]
    if: ${{ needs.setup-job.outputs.has-changes == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/pnpm-setup
      - name: Setup Turbo Cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - run: pnpm test:turbo --filter='!@liam-hq/app'

  frontend-test-integration:
    needs: [setup-job]
    if: ${{ needs.setup-job.outputs.has-changes == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5

    services:
      postgres:
        image: supabase/postgres:15.1.1.78
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: ./.github/actions/pnpm-setup
      - name: Install Supabase CLI
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/supabase/cli/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
          curl -fsSL "https://github.com/supabase/cli/releases/download/${LATEST_VERSION}/supabase_linux_amd64.tar.gz" -o supabase.tar.gz
          tar -xzf supabase.tar.gz
          sudo mv supabase /usr/local/bin/
          supabase --version
      - name: Setup Turbo Cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-
      - run: cp .env.template .env
      - name: Setup database connection
        run: |
          echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/postgres" >> .env
          echo "SUPABASE_URL=http://localhost:54321" >> .env
          echo "SUPABASE_ANON_KEY=test-anon-key" >> .env
          echo "SUPABASE_SERVICE_ROLE_KEY=test-service-key" >> .env
      - run: pnpm test:turbo --filter='@liam-hq/app'
      - run: pnpm --filter @liam-hq/db supabase:gen
      - name: Check for diff in generated types and schema.sql
        env:
          GENERATED_FILES: "frontend/internal-packages/db/supabase/database.types.ts frontend/internal-packages/db/schema/schema.sql"
        run: |
          if ! git diff HEAD --ignore-space-at-eol --exit-code ${{ env.GENERATED_FILES }}; then
            echo "Generated types and schema.sql differ from committed files."
            exit 1
          else
            echo "Generated types and schema.sql are up-to-date."
            exit 0
          fi
