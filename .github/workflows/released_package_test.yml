name: "released package test"

on:
  workflow_dispatch:
    inputs:
      delay_seconds:
        description: "Delay in seconds before execution"
        required: false
        default: 0
        type: number
      version:
        description: "Version to test"
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: sleep
        run: |
          echo "Starting after ${{ github.event.inputs.delay_seconds }} seconds"
          sleep ${{ github.event.inputs.delay_seconds }}
      - name: "check @liam-hq/cli exit code 1: version check"
        shell: bash
        run: |
          version="${{ github.event.inputs.version }}"
          if [ -z "${version}" ]; then
            echo "Error: Failed to extract version from package.json"
            exit 1
          fi
          if [[ ! "${version}" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?$ ]]; then
            echo "Error: Invalid version format"
            exit 1
          fi
          npx --yes @liam-hq/cli@${version} --version

      - name: "check @liam-hq/cli exit code 2: --format postgres check"
        run: |
          version="${{ github.event.inputs.version }}"
          npx --yes @liam-hq/cli@${version} erd build --input https://github.com/liam-hq/liam/blob/main/frontend/internal-packages/db/schema/schema.sql --format postgres

      - name: "check @liam-hq/cli exit code 3: --format schemarb check"
        run: |
          version="${{ github.event.inputs.version }}"
          npx --yes @liam-hq/cli@${version} erd build --input https://github.com/mastodon/mastodon/blob/e2f085e2b2cec08dc1f5ae825730c2a3bf62e054/db/schema.rb --format schemarb

      - name: "check @liam-hq/cli exit code 4: --format prisma check"
        run: |
          version="${{ github.event.inputs.version }}"
          npx --yes @liam-hq/cli@${version} erd build --input https://github.com/langfuse/langfuse/blob/cf29c6b7e447cf1aec7a8d50ae6a877c3844b7cd/packages/shared/prisma/schema.prisma --format prisma


      # derived from https://github.com/route06/actions/blob/8e3ac6855302a4fe3bd621ebd16c7a0da261948a/.github/workflows/notify_slack_on_ci_failed.yml
      - name: Slack Notification on Success
        if: success()
        uses: tokorom/action-slack-incoming-webhook@d57bf1eb618f3dae9509afefa70d5774ad3d42bf # v1.3.0
        env:
          # https://api.slack.com/apps/A08CVT65VAT/general
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_CLI_CI_WEBHOOK_URL }}
        with:
          text: "Liam CLI released package test"
          attachments: |
            [
              {
                "color": "good",
                "fields": [
                  {
                    "title": "Version",
                    "value": "${{ github.event.inputs.version }}"
                  },
                  {
                    "title": "Result",
                    "value": "success"
                  }
                ]
              }
            ]

      - name: Slack Notification on Failure
        if: failure()
        uses: tokorom/action-slack-incoming-webhook@d57bf1eb618f3dae9509afefa70d5774ad3d42bf # v1.3.0
        env:
          # https://api.slack.com/apps/A08CVT65VAT/general
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_CLI_CI_WEBHOOK_URL }}
        with:
          text: "Liam CLI released package test"
          attachments: |
            [
              {
                "color": "bad",
                "fields": [
                  {
                    "title": "Version",
                    "value": "${{ github.event.inputs.version }}"
                  },
                  {
                    "title": "Result",
                    "value": "failure"
                  }
                ]
              }
            ]
