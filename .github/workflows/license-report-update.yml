name: License Report Update

# ## Summary
#
# This workflow updates $LICENSE_REPORT using license_finder CLI
# and automatically create a pull request if any changes are detected.

on:
  schedule:
    - cron: "00 0 * * 1" # every monday 9:00 JST
  workflow_dispatch:

jobs:
  license_report_update:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    timeout-minutes: 10
    env:
      LICENSE_REPORT: docs/packages-license.md
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Create GitHub App Token
        uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: app-token
        with:
          app-id: ${{ vars.LICENSE_CI_TRIGGER_APP_ID }}
          private-key: ${{ secrets.LICENSE_CI_TRIGGER_APP_PRIVATE_KEY }}
          permission-contents: write
          permission-pull-requests: write
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          token: ${{ steps.app-token.outputs.token }}
          persist-credentials: false
      - uses: ./.github/actions/pnpm-setup
      - name: Install License Finder
        run: sudo gem install -N license_finder
      - name: Generate license report
        run: |
          mkdir -p "$(dirname "$LICENSE_REPORT")"
          license_finder report --format=markdown | tail -n +2 > "$LICENSE_REPORT"
          # Delete the timestamp line because there will be a difference even if there is no change in licenses
          sed -e '/^As of /d' -i "$LICENSE_REPORT"
      - name: Create pull request if license report changes
        run: |
          if git diff --quiet; then
            echo 'No changes to commit'
            exit 0
          fi

          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          BRANCH_NAME="license-report-update-$(date +'%Y%m%d%H%M%S')"
          git checkout -b "$BRANCH_NAME"
          git add "$LICENSE_REPORT"
          git commit -m "Update $LICENSE_REPORT"
          
          # Configure git to use the token for authentication
          git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git"
          git push origin "$BRANCH_NAME"
          
          gh pr create \
            --title "[$(date +'%Y/%m/%d')] License Report Update" \
            --body "This pull request automatically updates the license report."
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
