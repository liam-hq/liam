name: E2E Tests

on:
  deployment_status:

jobs:
  _check-deployment:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      should_run_liam_app_test: ${{ steps.check.outputs.should_run_liam_app_test }}
      should_run_liam_erd_sample_test: ${{ steps.check.outputs.should_run_liam_erd_sample_test }}
      liam_erd_sample_url: ${{ steps.check.outputs.liam_erd_sample_url }}
      liam_erd_sample_environment: ${{ steps.check.outputs.liam_erd_sample_environment }}
      liam_app_url: ${{ steps.check.outputs.liam_app_url }}
      liam_app_environment: ${{ steps.check.outputs.liam_app_environment }}
    steps:
      - name: Check deployment conditions
        id: check
        shell: ruby {0}
        working-directory: ${{ github.workspace }}
        run: |
          event_name      = "${{ github.event_name }}"
          event_state     = "${{ github.event.deployment_status.state }}"
          environment_val = "${{ github.event.deployment.environment }}"
          target_url      = "${{ github.event.deployment_status.target_url }}"

          result =
            if event_name == "deployment_status" && event_state == "success"
              # Production deployment
              if (environment_val.include?("Production") && target_url.include?("liam-app-git-main"))
                "should_run_liam_app_test=true\nshould_run_liam_erd_sample_test=false\nliam_app_url=#{target_url}\nliam_app_environment=#{environment_val}\nliam_erd_sample_url=\nliam_erd_sample_environment="
              # Preview deployment for liam-app
              elsif environment_val.include?("Preview") && !target_url.include?("liam-erd-sample") && !target_url.include?("liam-docs") && !target_url.include?("liam-storybook")
                "should_run_liam_app_test=true\nshould_run_liam_erd_sample_test=false\nliam_app_url=#{target_url}\nliam_app_environment=#{environment_val}\nliam_erd_sample_url=\nliam_erd_sample_environment="
              # liam-erd-sample deployment
              elsif environment_val.include?("Preview") && target_url.include?("liam-erd-sample")
                "should_run_liam_app_test=false\nshould_run_liam_erd_sample_test=true\nliam_app_url=\nliam_app_environment=\nliam_erd_sample_url=#{target_url}\nliam_erd_sample_environment=#{environment_val}"
              else
                "should_run_liam_app_test=false\nshould_run_liam_erd_sample_test=false\nliam_app_url=\nliam_app_environment=\nliam_erd_sample_url=\nliam_erd_sample_environment="
              end
            else
              "should_run_liam_app_test=false\nshould_run_liam_erd_sample_test=false\nliam_app_url=\nliam_app_environment=\nliam_erd_sample_url=\nliam_erd_sample_environment="
            end

          # Same as 'echo "should_run_liam_production_app_test=xxxx" >> $GITHUB_OUTPUT'
          output_file = ENV.fetch("GITHUB_OUTPUT")
          File.open(output_file, "a") do |file|
            file.puts result
          end

  _e2e-tests:
    needs: _check-deployment
    if: needs._check-deployment.outputs.should_run_liam_app_test == 'true' || needs._check-deployment.outputs.should_run_liam_erd_sample_test == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        include:
          - app: liam-app
            should_run: ${{ needs._check-deployment.outputs.should_run_liam_app_test == 'true' }}
            url_env: LIAM_APP_URL
            environment_env: LIAM_APP_ENVIRONMENT
            production_env: 'Production – liam-app'
          - app: liam-erd-sample
            should_run: ${{ needs._check-deployment.outputs.should_run_liam_erd_sample_test == 'true' }}
            url_env: LIAM_ERD_SAMPLE_URL
            environment_env: LIAM_ERD_SAMPLE_ENVIRONMENT
            production_env: 'Production – liam-erd-sample'
        browser: [chromium, 'Mobile Safari']
      fail-fast: false
    permissions:
      contents: read
      statuses: write
    defaults:
      run:
        working-directory: 'frontend/internal-packages/e2e'
    env:
      CI: true
      LIAM_APP_URL: ${{ needs._check-deployment.outputs.liam_app_url }}
      LIAM_APP_ENVIRONMENT: ${{ needs._check-deployment.outputs.liam_app_environment }}
      LIAM_ERD_SAMPLE_URL: ${{ needs._check-deployment.outputs.liam_erd_sample_url }}
      LIAM_ERD_SAMPLE_ENVIRONMENT: ${{ needs._check-deployment.outputs.liam_erd_sample_environment }}
    steps:
      - name: Debug matrix values
        run: |
          echo "Matrix app: ${{ matrix.app }}"
          echo "Matrix should_run: ${{ matrix.should_run }}"
          echo "Matrix browser: ${{ matrix.browser }}"
          echo "LIAM_APP_URL: ${{ env.LIAM_APP_URL }}"
          echo "LIAM_APP_ENVIRONMENT: ${{ env.LIAM_APP_ENVIRONMENT }}"
          echo "LIAM_ERD_SAMPLE_URL: ${{ env.LIAM_ERD_SAMPLE_URL }}"
          echo "LIAM_ERD_SAMPLE_ENVIRONMENT: ${{ env.LIAM_ERD_SAMPLE_ENVIRONMENT }}"

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.deployment.sha }}
          persist-credentials: false

      - name: Setup pnpm
        if: matrix.should_run == 'true'
        uses: ./.github/actions/pnpm-setup

      - name: Cache Playwright browsers
        if: matrix.should_run == 'true'
        id: playwright-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml', '**/playwright.config.ts') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        if: matrix.should_run == 'true' && steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps

      - name: Install system dependencies for WebKit
        # Some WebKit dependencies seem to lay outside the cache and will need to be installed separately
        if: matrix.should_run == 'true' && steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps webkit

      # This workflow is triggered for all deployments (liam-app, liam-erd-sample, liam-docs),
      # but E2E tests are executed only for the specific app deployments.
      - name: Run e2e tests
        if: matrix.should_run == 'true'
        run: pnpm exec playwright test --project="${{ matrix.browser }}"
        env:
          URL: ${{ matrix.app == 'liam-app' && env.LIAM_APP_URL || env.LIAM_ERD_SAMPLE_URL }}
          ENVIRONMENT: ${{ matrix.app == 'liam-app' && env.LIAM_APP_ENVIRONMENT || env.LIAM_ERD_SAMPLE_ENVIRONMENT }}

      # FIXME: This step is not working well. All environments seem to be Preview.
      - name: Upload test results
        if: matrix.should_run == 'true' && failure()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: test-results-${{ matrix.app }}-${{ matrix.browser }}-${{ github.run_id }}-${{ github.job }}
          path: frontend/internal-packages/e2e/test-results/
          retention-days: 30

      - name: Post E2E status manually (with gh)
        if: matrix.should_run == 'true' && always()
        run: |
          STATE="${{ job.status }}"
          CONTEXT="E2E Tests / ${{ matrix.app }} (${{ matrix.browser }})"
          gh api repos/${{ github.repository }}/statuses/${{ github.sha }} \
            --method POST \
            --field state="${STATE}" \
            --field context="${CONTEXT}" \
            --field description="E2E test result for ${{ matrix.app }} ${{ matrix.browser }}: (${STATE})" \
            --field target_url="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Slack Notification on Failure
        if: matrix.should_run == 'true' && ((matrix.app == 'liam-app' && env.LIAM_APP_ENVIRONMENT == 'Production – liam-app') || (matrix.app == 'liam-erd-sample' && env.LIAM_ERD_SAMPLE_ENVIRONMENT == 'Production – liam-erd-sample')) && failure()
        uses: tokorom/action-slack-incoming-webhook@d57bf1eb618f3dae9509afefa70d5774ad3d42bf # v1.3.0
        env:
          INCOMING_WEBHOOK_URL: ${{ secrets.SLACK_CLI_CI_WEBHOOK_URL }}
        with:
          text: 'E2E Test Failure'
          attachments: |
            [
              {
                "color": "bad",
                "fields": [
                  {
                    "title": "App",
                    "value": "${{ matrix.app }}"
                  },
                  {
                    "title": "Browser",
                    "value": "${{ matrix.browser }}"
                  },
                  {
                    "title": "Result",
                    "value": "failure"
                  },
                  {
                    "title": "Job URL",
                    "value": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
