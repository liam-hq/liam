name: Playwright Test Verification

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  playwright-verification:
    permissions:
      contents: read
      pull-requests: write
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0  # Need full history for accurate diff analysis
          persist-credentials: false

      - name: Setup pnpm
        uses: ./.github/actions/pnpm-setup

      - name: Cache Playwright browsers
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml', '**/playwright.config.ts') }}
          restore-keys: |
            playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: pnpm --filter @liam-hq/e2e exec playwright install --with-deps

      - name: Install Playwright system dependencies
        if: steps.playwright-cache.outputs.cache-hit == 'true'
        run: pnpm --filter @liam-hq/e2e exec playwright install-deps

      - name: Start Supabase
        run: pnpm --filter @liam-hq/db supabase:start

      - name: Setup environment
        run: |
          cp .env.template .env
          chmod +x ./scripts/extract-supabase-anon-key.sh ./scripts/extract-supabase-service-key.sh
          ./scripts/extract-supabase-anon-key.sh
          ./scripts/extract-supabase-service-key.sh
          # Set FLAGS_SECRET from GitHub Secrets if available
          if [ -n "${{ secrets.FLAGS_SECRET }}" ]; then
            echo "FLAGS_SECRET=${{ secrets.FLAGS_SECRET }}" >> .env
          fi

      - name: Start Trigger.dev
        run: |
          pnpm --filter @liam-hq/jobs trigger:dev &
          sleep 10  # Wait for Trigger.dev to start

      - name: Start application
        run: |
          pnpm dev --filter @liam-hq/app &
          # Wait for application to be ready
          timeout 60 bash -c 'until curl -s http://localhost:3001 > /dev/null 2>&1; do echo "Waiting for app..."; sleep 2; done'
          echo "Application is ready!"

      - name: Get changed files
        id: changed-files
        run: |
          echo "Changed files:"
          git diff --name-only HEAD~1 HEAD || git diff --name-only $(git rev-list --max-parents=0 HEAD) HEAD
          
          # Store the diff for Claude to analyze
          git diff HEAD~1 HEAD > /tmp/git-diff.txt || git diff $(git rev-list --max-parents=0 HEAD) HEAD > /tmp/git-diff.txt

      - name: Run Playwright test verification
        uses: anthropics/claude-code-action@91c510a769db0f9b79df0efbdded0c29c033f846 # beta
        env:
          FLAGS_SECRET: ${{ secrets.FLAGS_SECRET }}
        with:
          direct_prompt: |
            /test-playwright analyze git changes and test affected features based on the diff in /tmp/git-diff.txt
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          allowed_tools: "mcp__playwright__browser_navigate,mcp__playwright__browser_snapshot,mcp__playwright__browser_click,mcp__playwright__browser_type,mcp__playwright__browser_press_key,mcp__playwright__browser_take_screenshot,mcp__playwright__browser_wait_for,mcp__playwright__browser_close,mcp__playwright__browser_console_messages,mcp__playwright__browser_network_requests,Bash,Read,Grep,Glob"
          mcp_config: |
            {
              "mcpServers": {
                "playwright": {
                  "command": "npx",
                  "args": ["@playwright/mcp@latest", "--headless"]
                }
              }
            }