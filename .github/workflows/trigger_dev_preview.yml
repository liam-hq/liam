name: trigger_dev_preview
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event.action != 'closed' }}

jobs:
  setup-job:
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      contents: read
      pull-requests: read
    outputs:
      should-deploy-preview: ${{ steps.changes.outputs.should-deploy-preview }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            should-deploy-preview:
              - '.github/workflows/trigger_dev_preview.yml'
              - 'frontend/apps/app/**'
              - 'frontend/internal-packages/**'
              - 'frontend/packages/**'
              - 'package.json'
              - 'pnpm-lock.yaml'
              - 'pnpm-workspace.yaml'
              - 'turbo.json'
              - 'biome.jsonc'
              - '.syncpackrc'

  trigger_dev:
    needs: [setup-job]
    if: ${{ github.event.action != 'closed' && needs.setup-job.outputs.should-deploy-preview == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - uses: ./.github/actions/pnpm-setup
      - name: Create GitHub deployment for liam-erd-sample (non-auto-inactive)
        if: github.event.action != 'closed'
        run: |
          gh api repos/${{ github.repository }}/deployments \
            --method POST \
            --field ref="${{ github.sha }}" \
            --field environment="Preview / liam-erd-sample" \
            --field description="Deployment triggered for PR: ${{ github.head_ref }}" \
            --field required_contexts="[]" \
            --field auto_inactive=false
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to trigger.dev preview
        shell: bash
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          TRIGGER_PROJECT_ID: ${{ vars.TRIGGER_PROJECT_ID }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_ENV_NAME: preview
          VERCEL_GIT_COMMIT_REF: ${{ github.head_ref }}
        run: pnpm deploy:jobs -- --env preview --branch ${{ github.head_ref }}

  archive_preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm-setup

      - name: Archive trigger.dev preview
        shell: bash
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          TRIGGER_PROJECT_ID: ${{ vars.TRIGGER_PROJECT_ID }}
        run: |
          echo "Archiving trigger.dev preview for branch: ${{ github.head_ref }}"

          # Archive with retry logic
          MAX_RETRIES=3
          RETRY_COUNT=0

          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            echo "Attempt $((RETRY_COUNT + 1)) of $MAX_RETRIES"
            
            if pnpm --filter @liam-hq/jobs exec trigger preview archive --branch "${{ github.head_ref }}"; then
              echo "Successfully archived preview environment for branch: ${{ github.head_ref }}"
              
              # Verify archiving by checking if the environment still exists
              echo "Verifying archive operation..."
              sleep 5
              
              if pnpm --filter @liam-hq/jobs exec trigger preview list --branch "${{ github.head_ref }}" 2>/dev/null | grep -q "${{ github.head_ref }}"; then
                echo "Warning: Environment may still be active after archiving"
              else
                echo "Archive verification successful - environment no longer listed"
              fi
              
              exit 0
            else
              RETRY_COUNT=$((RETRY_COUNT + 1))
              if [ $RETRY_COUNT -lt $MAX_RETRIES ]; then
                echo "Archive failed, retrying in 10 seconds..."
                sleep 10
              else
                echo "Archive failed after $MAX_RETRIES attempts"
                exit 1
              fi
            fi
          done

  cleanup_stale:
    needs: [archive_preview]
    if: github.event.action == 'closed' && always()
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - uses: ./.github/actions/pnpm-setup

      - name: Cleanup stale environments
        shell: bash
        env:
          TRIGGER_ACCESS_TOKEN: ${{ secrets.TRIGGER_ACCESS_TOKEN }}
          TRIGGER_PROJECT_ID: ${{ vars.TRIGGER_PROJECT_ID }}
        run: |
          echo "Checking for any stale preview environments..."

          # List all preview environments and attempt to clean up any that match this branch
          echo "Ensuring no preview environments remain for branch: ${{ github.head_ref }}"

          # Attempt cleanup even if the previous step failed
          pnpm --filter @liam-hq/jobs exec trigger preview archive --branch "${{ github.head_ref }}" 2>/dev/null || true

          echo "Cleanup check completed"
