import type { DBStructure } from '@liam-hq/db-structure'

export const zIndex = {
  nodeDefault: 2,
  edgeHighlighted: 1,
  edgeDefault: 0,
}

export const BEFORE_DB: DBStructure = {
  tables: {
    pokemons: {
      name: 'pokemons',
      columns: {
        id: {
          name: 'id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: true,
          unique: true,
          notNull: true,
          comment: 'ポケモンの識別子',
        },
        name: {
          name: 'name',
          type: 'VARCHAR(255)',
          default: null,
          check: null,
          primary: false,
          unique: true,
          notNull: true,
          comment: 'ポケモンの名前',
        },
        type_id: {
          name: 'type_id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: true,
          comment: 'ポケモンのタイプID（外部キー）',
        },
        height: {
          name: 'height',
          type: 'DECIMAL(5,2)',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: false,
          comment: '身長（メートル単位）',
        },
        weight: {
          name: 'weight',
          type: 'DECIMAL(5,2)',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: false,
          comment: '体重（キログラム単位）',
        },
      },
      comment: 'ポケモン図鑑のエントリーを格納するテーブル',
      indices: {
        pokemons_name_idx: {
          name: 'pokemons_name_idx',
          unique: true,
          columns: ['name'],
        },
      },
    },
    types: {
      name: 'types',
      columns: {
        id: {
          name: 'id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: true,
          unique: true,
          notNull: true,
          comment: 'タイプの識別子',
        },
        name: {
          name: 'name',
          type: 'VARCHAR(100)',
          default: null,
          check: null,
          primary: false,
          unique: true,
          notNull: true,
          comment: 'タイプ名（例：炎、みず、草など）',
        },
        description: {
          name: 'description',
          type: 'TEXT',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: false,
          comment: 'タイプの特徴や説明',
        },
      },
      comment: '各ポケモンのタイプ情報を管理するテーブル',
      indices: {
        types_name_idx: {
          name: 'types_name_idx',
          unique: true,
          columns: ['name'],
        },
      },
    },
  },
  relationships: {
    pokemon_type: {
      name: 'pokemon_type',
      primaryTableName: 'types',
      primaryColumnName: 'id',
      foreignTableName: 'pokemons',
      foreignColumnName: 'type_id',
      cardinality: 'ONE_TO_MANY',
      updateConstraint: 'CASCADE',
      deleteConstraint: 'RESTRICT',
    },
  },
}

export const AFTER_DB: DBStructure = {
  tables: {
    pokemons: {
      name: 'pokemons',
      columns: {
        id: {
          name: 'id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: true,
          unique: true,
          notNull: true,
          comment: 'ポケモンの識別子',
        },
        name: {
          name: 'name',
          type: 'VARCHAR(255)',
          default: null,
          check: null,
          primary: false,
          unique: true,
          notNull: true,
          comment: 'ポケモンの名前',
        },
        type_id: {
          name: 'type_id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: true,
          comment: 'ポケモンのタイプID（外部キー）',
        },
        pokemon_height: {
          name: 'pokemon_height',
          type: 'DECIMAL(5,2)',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: false,
          comment: '身長（メートル単位）',
        },
        base_experience: {
          name: 'base_experience',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: false,
          comment: 'ポケモンの基礎経験値',
        },
      },
      comment: 'ポケモン図鑑のエントリーを格納するテーブル',
      indices: {
        pokemons_name_idx: {
          name: 'pokemons_name_idx',
          unique: true,
          columns: ['name'],
        },
      },
    },
    trainers: {
      name: 'trainers',
      columns: {
        id: {
          name: 'id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: true,
          unique: true,
          notNull: true,
          comment: 'トレーナーの識別子',
        },
        name: {
          name: 'name',
          type: 'VARCHAR(100)',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: true,
          comment: 'トレーナー名',
        },
      },
      comment: 'ポケモントレーナー情報を管理するテーブル',
      indices: {},
    },
    types: {
      name: 'types',
      columns: {
        id: {
          name: 'id',
          type: 'INTEGER',
          default: null,
          check: null,
          primary: true,
          unique: true,
          notNull: true,
          comment: 'タイプの識別子',
        },
        name: {
          name: 'name',
          type: 'VARCHAR(100)',
          default: null,
          check: null,
          primary: false,
          unique: true,
          notNull: true,
          comment: 'タイプ名（例：炎、みず、草など）',
        },
        description: {
          name: 'description',
          type: 'TEXT',
          default: null,
          check: null,
          primary: false,
          unique: false,
          notNull: false,
          comment: 'タイプの特徴や説明',
        },
      },
      comment: '各ポケモンのタイプ情報を管理するテーブル',
      indices: {
        types_name_idx: {
          name: 'types_name_idx',
          unique: true,
          columns: ['name'],
        },
      },
    },
  },
  relationships: {
    pokemon_type: {
      name: 'pokemon_type',
      primaryTableName: 'types',
      primaryColumnName: 'id',
      foreignTableName: 'pokemons',
      foreignColumnName: 'type_id',
      cardinality: 'ONE_TO_MANY',
      updateConstraint: 'CASCADE',
      deleteConstraint: 'RESTRICT',
    },
  },
}
